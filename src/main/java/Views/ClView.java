/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controladores.ClienteController;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import modelo.Mesa;
import persistencia.ClasesDao.ClienteDAO;
import persistencia.ClasesDao.ReservaDAO;
import persistencia.ClasesDao.TarjetaDAO;
import modelo.Cliente;
import modelo.Reserva;
import modelo.Tarjeta;
import Views.MensajeReserva;
import modelo.AgendaRestaurante;
import persistencia.ClasesDao.EmpleadoDAO;

/**
 * La clase ClView representa a la ventana que puede ver el cliente.
 *
 * Tiene metodos para: -Actualizar la tabla del historial. -Actualizar la tabla
 * de mesas. -Ordena la tabla de historial. -Volver a la ventana de inicio.
 * -Realizar una nueva reserva. -Confirmar que la fecha ingresada sea valida.
 * -Ver los datos de las reservas. -Modificar la reserva. -Eliminar la reserva.
 * -En caso de ser cumplir con los criterios avisa que tenes una reserva a
 * futuro.
 *
 * @author Marcos Ramon Caraballo, Angelina María Vialle,Valentin Rebechi,Ian
 * Caraballo
 * @version 27/10/2024
 */
public class ClView extends javax.swing.JFrame {

    private ArrayList<Tarjeta> tarjetas;
    private ArrayList<Mesa> mesas;
    private ArrayList<Reserva> reservas;
    private LocalDate fechaBuscar;
    private LocalTime horaBuscar;
    private Cliente cliente1;
    private Tarjeta tarjeta = new Tarjeta();
    private Reserva reserva = new Reserva();
    private AgendaRestaurante agendaR = new AgendaRestaurante();

    /**
     * Construcutor donde se inicializan los componentes de la ventana, se
     * define el tamaño de ventana, se hace que sea imposible modificar por el
     * usuario cambiar el tamaño de la ventana, le pone el titulo a la ventana y
     * la centra. Se guarda el cliente que inicio sesion en y que se paso por
     * parametro, ademas verifica si hay que enviarle un alerta de reserva
     * proxima al cliente
     *
     * @param cliente1 es el cliente que ingresa
     */
    public ClView(Cliente cliente1) {
        initComponents();
        setSize(1125,
                670);
        setResizable(false);
        setTitle("Sistema de Clientes");
        setLocationRelativeTo(null);

        this.cliente1 = cliente1;
        avisoPrevioReserva();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton_cliente_Salir = new javax.swing.JToggleButton();
        jTabbedPane_cliente = new javax.swing.JTabbedPane();
        realizaReserva_cliente = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_fechaNewReserva = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextField_comentario = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextFieldClienteReservaEmiT = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextFieldCienteReservaNombreT = new javax.swing.JTextPane();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton_nuevaReserva = new javax.swing.JButton();
        jComboBoxClienteReservaMesa = new javax.swing.JComboBox<>();
        jTextFieldClienteReservanNumT = new javax.swing.JTextField();
        jComboBoxClienteReservaUbicacion = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jComboBoxClienteReservaCapacidad = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_horaBuscar = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_mesasDisponibles = new javax.swing.JTable();
        jTextFieldClienteReservaCodSeg = new javax.swing.JTextField();
        JButton_confirmarFecha = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLNuevoCorreo = new javax.swing.JLabel();
        jLTelefono = new javax.swing.JLabel();
        jButton_cliente_perfil_actualizar = new javax.swing.JButton();
        jTxtClientePerfilTelefono = new javax.swing.JTextField();
        jTxtClientePerfilNuevoCorreo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        nombreClienteBase = new javax.swing.JTextField();
        correoClienteBase = new javax.swing.JTextField();
        telefonoClienteBase = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jBVerDatos = new javax.swing.JButton();
        historial_cliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_historialCliente = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTxt_cliente_fecha = new javax.swing.JTextField();
        jButton_cliente_modificar_reserva = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jBVerHistorial = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxHoraBuscarMod = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jComboBoxCapMod = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        jComboBoxUbiMod = new javax.swing.JComboBox<>();
        jComboBoxMesaMod = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextField_comentarioMod = new javax.swing.JTextArea();
        jLabel37 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTxtNombreTarjetaMod = new javax.swing.JTextField();
        jTxtEmisorTarjetaMod = new javax.swing.JTextField();
        jTxtNumeroTarjetaMod = new javax.swing.JTextField();
        jTxtCodigoTarjetaMod = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable_mesasDisponiblesMod = new javax.swing.JTable();
        jBVer = new javax.swing.JButton();
        jButton_cliente_eliminar_reserva1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Delicias Gourmet");

        jToggleButton_cliente_Salir.setText("Salir");
        jToggleButton_cliente_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_cliente_SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 751, Short.MAX_VALUE)
                .addComponent(jToggleButton_cliente_Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jToggleButton_cliente_Salir))
                .addGap(18, 18, 18))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 60));

        jTabbedPane_cliente.setBackground(new java.awt.Color(0, 102, 102));
        jTabbedPane_cliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        realizaReserva_cliente.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setText("Fecha");

        jTextField_fechaNewReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_fechaNewReservaActionPerformed(evt);
            }
        });

        jLabel17.setText("Comentario");

        jTextField_comentario.setColumns(20);
        jTextField_comentario.setRows(5);
        jScrollPane4.setViewportView(jTextField_comentario);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Datos de tarjeta");

        jLabel19.setText("Emisor");

        jLabel20.setText("Numero");

        jLabel21.setText("Nombre");

        jLabel22.setText("Codigo de seguridad");

        jScrollPane7.setViewportView(jTextFieldClienteReservaEmiT);

        jScrollPane8.setViewportView(jTextFieldCienteReservaNombreT);

        jLabel23.setText("Numero de mesa");

        jLabel24.setText("Ubicacion");

        jLabel25.setText("Capacidad");

        jButton_nuevaReserva.setText("Reservar");
        jButton_nuevaReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nuevaReservaActionPerformed(evt);
            }
        });

        jComboBoxClienteReservaMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        jComboBoxClienteReservaMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxClienteReservaMesaActionPerformed(evt);
            }
        });

        jTextFieldClienteReservanNumT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldClienteReservanNumTActionPerformed(evt);
            }
        });

        jComboBoxClienteReservaUbicacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cualquiera", "Interior", "Exterior" }));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Interior");

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Exterior");

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mesas.png"))); // NOI18N

        jComboBoxClienteReservaCapacidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cualquiera", "dos", "cuatro", "seis", "ocho", "diez" }));

        jLabel6.setText("Hora");

        jComboBox_horaBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22" }));
        jComboBox_horaBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable_mesasDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numero", "Capacidad", "Ubicacion", "Disponible"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable_mesasDisponibles);
        jTable_mesasDisponibles.getAccessibleContext().setAccessibleName("Hora");

        JButton_confirmarFecha.setText("Mesas Disponibles");
        JButton_confirmarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButton_confirmarFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout realizaReserva_clienteLayout = new javax.swing.GroupLayout(realizaReserva_cliente);
        realizaReserva_cliente.setLayout(realizaReserva_clienteLayout);
        realizaReserva_clienteLayout.setHorizontalGroup(
            realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel25))
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, realizaReserva_clienteLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxClienteReservaUbicacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                        .addComponent(jComboBoxClienteReservaMesa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2))
                                    .addComponent(jComboBox_horaBuscar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxClienteReservaCapacidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField_fechaNewReserva)))
                            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel17))
                            .addComponent(jLabel3))
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, realizaReserva_clienteLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel14)
                                .addGap(155, 155, 155)
                                .addComponent(jLabel26)
                                .addGap(75, 75, 75))))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(551, 551, 551)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel18))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jTextFieldClienteReservanNumT, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldClienteReservaCodSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton_nuevaReserva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JButton_confirmarFecha)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        realizaReserva_clienteLayout.setVerticalGroup(
            realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, realizaReserva_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_fechaNewReserva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(jLabel26)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25)
                            .addComponent(jComboBoxClienteReservaCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jComboBoxClienteReservaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxClienteReservaUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox_horaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addGap(819, 819, 819)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, realizaReserva_clienteLayout.createSequentialGroup()
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                        .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(realizaReserva_clienteLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel21))
                                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel19))
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jTextFieldClienteReservanNumT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jTextFieldClienteReservaCodSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(realizaReserva_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_nuevaReserva)
                                    .addComponent(JButton_confirmarFecha))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane_cliente.addTab("Nueva Reserva", realizaReserva_cliente);

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Perfil"));

        jLNuevoCorreo.setText("Nuevo Correo:");

        jLTelefono.setText("Telefono:");

        jButton_cliente_perfil_actualizar.setText("Actualizar");
        jButton_cliente_perfil_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cliente_perfil_actualizarActionPerformed(evt);
            }
        });

        jTxtClientePerfilTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtClientePerfilTelefonoActionPerformed(evt);
            }
        });

        jTxtClientePerfilNuevoCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtClientePerfilNuevoCorreoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel16.setText("Datos del Cliente ");

        jLabel28.setText("Nombre");

        jLabel29.setText("Correo");

        jLabel31.setText("Telefono");

        nombreClienteBase.setEditable(false);
        nombreClienteBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreClienteBaseActionPerformed(evt);
            }
        });

        correoClienteBase.setEditable(false);

        telefonoClienteBase.setEditable(false);
        telefonoClienteBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoClienteBaseActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setText("Cambio de Datos");

        jBVerDatos.setText("Ver datos");
        jBVerDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(telefonoClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(311, 311, 311)
                        .addComponent(jButton_cliente_perfil_actualizar))
                    .addComponent(jBVerDatos)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLNuevoCorreo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtClientePerfilNuevoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLTelefono)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtClientePerfilTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(456, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel29)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correoClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel16)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel12)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtClientePerfilNuevoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLNuevoCorreo))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtClientePerfilTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLTelefono))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_cliente_perfil_actualizar)
                            .addComponent(telefonoClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel28)
                            .addComponent(nombreClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(correoClienteBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVerDatos)
                .addContainerGap(326, Short.MAX_VALUE))
        );

        jTabbedPane_cliente.addTab("Perfil", jPanel4);

        historial_cliente.setBackground(new java.awt.Color(0, 102, 102));
        historial_cliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Mis Reservas"));

        jTable_historialCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Hora", "Mesa", "Asistencia", "Nro tarjeta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_historialCliente);
        if (jTable_historialCliente.getColumnModel().getColumnCount() > 0) {
            jTable_historialCliente.getColumnModel().getColumn(2).setResizable(false);
            jTable_historialCliente.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTable_historialCliente.getColumnModel().getColumn(3).setResizable(false);
            jTable_historialCliente.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fecha:");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Mesa:");

        jTxt_cliente_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxt_cliente_fechaActionPerformed(evt);
            }
        });

        jButton_cliente_modificar_reserva.setText("Modificar");
        jButton_cliente_modificar_reserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cliente_modificar_reservaActionPerformed(evt);
            }
        });

        jBVerHistorial.setText("Ver");
        jBVerHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerHistorialActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Hora");

        jComboBoxHoraBuscarMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No cambiar", "12", "14", "16", "18", "20", "22" }));
        jComboBoxHoraBuscarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHoraBuscarModActionPerformed(evt);
            }
        });

        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Historial de Reservas");

        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Mesas Disponibles");

        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Capacidad");

        jComboBoxCapMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cualquiera", "dos", "cuatro", "seis", "ocho", "diez" }));
        jComboBoxCapMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCapModActionPerformed(evt);
            }
        });

        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Ubicacion");

        jComboBoxUbiMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cualquiera", "Interior", "Exterior" }));
        jComboBoxUbiMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUbiModActionPerformed(evt);
            }
        });

        jComboBoxMesaMod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No cambiar", "1", "2", "3", "4", "5", "6", "7", "8" }));
        jComboBoxMesaMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMesaModActionPerformed(evt);
            }
        });

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Comentario");

        jTextField_comentarioMod.setColumns(20);
        jTextField_comentarioMod.setRows(5);
        jScrollPane6.setViewportView(jTextField_comentarioMod);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tarjeta");

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Nombre");

        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Emisor");

        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Numero");

        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Codigo");

        jTxtNombreTarjetaMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtNombreTarjetaModActionPerformed(evt);
            }
        });

        jTxtEmisorTarjetaMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtEmisorTarjetaModActionPerformed(evt);
            }
        });

        jTxtCodigoTarjetaMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtCodigoTarjetaModActionPerformed(evt);
            }
        });

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mesas.png"))); // NOI18N

        jTable_mesasDisponiblesMod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numero", "Capacidad", "Ubicacion", "Disponible"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable_mesasDisponiblesMod);

        jBVer.setText("VER");
        jBVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerActionPerformed(evt);
            }
        });

        jButton_cliente_eliminar_reserva1.setText("Cancelar");
        jButton_cliente_eliminar_reserva1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cliente_eliminar_reserva1ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nueva Reserva / Modificar Reserva");

        jLabel4.setText("jLabel4");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Interior");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Exterior");

        javax.swing.GroupLayout historial_clienteLayout = new javax.swing.GroupLayout(historial_cliente);
        historial_cliente.setLayout(historial_clienteLayout);
        historial_clienteLayout.setHorizontalGroup(
            historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historial_clienteLayout.createSequentialGroup()
                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addGap(714, 714, 714)
                                .addComponent(jLabel37))
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBVer)
                                        .addGap(282, 282, 282)
                                        .addComponent(jLabel5)
                                        .addGap(151, 151, 151)
                                        .addComponent(jLabel7))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jButton_cliente_modificar_reserva)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBVerHistorial)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_cliente_eliminar_reserva1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(jLabel30)))
                                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel1))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTxt_cliente_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel35))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxUbiMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxHoraBuscarMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel34))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBoxCapMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jComboBoxMesaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                                .addComponent(jLabel36)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel9))
                                    .addGroup(historial_clienteLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTxtNombreTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(18, 18, 18)
                                .addComponent(jTxtEmisorTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTxtNumeroTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(18, 18, 18)
                                .addComponent(jTxtCodigoTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel13)
                        .addGap(444, 444, 444)
                        .addComponent(jLabel4)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        historial_clienteLayout.setVerticalGroup(
            historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historial_clienteLayout.createSequentialGroup()
                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jBVer)))
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5))
                            .addGroup(historial_clienteLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_cliente_modificar_reserva)
                            .addComponent(jBVerHistorial)
                            .addComponent(jButton_cliente_eliminar_reserva1)))
                    .addComponent(jLabel30)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxt_cliente_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jComboBoxCapMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jComboBoxMesaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jComboBoxUbiMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jComboBoxHoraBuscarMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(1, 1, 1)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jTxtNombreTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2)
                .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel37)
                        .addGap(188, 188, 188))
                    .addGroup(historial_clienteLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtEmisorTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtNumeroTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(historial_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtCodigoTarjetaMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addContainerGap())))
        );

        jTabbedPane_cliente.addTab("Historial", historial_cliente);

        getContentPane().add(jTabbedPane_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1100, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Metodo que actualiza la tabla del historial de reservas del cliente
     */
    private void actualizarTablaHistorial() {
        ReservaDAO reservaDAO = new ReservaDAO();
        reservas = reservaDAO.obtenerReservasHistorial(cliente1);

        DefaultTableModel model = (DefaultTableModel) jTable_historialCliente.
                getModel();
        model.setRowCount(0);
        ordenarTablaHistorial();

        for (Reserva res : reservas) {
            String asistencia = res.getAsistencia() ? "Sí" : "No";
            model.addRow(new Object[]{
                res.getFecha().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                res.getHora().format(DateTimeFormatter.ofPattern("HH:mm:ss")),
                res.getMesa().getNumero(),
                asistencia, res.getTarjeta().getNumero()
            });
        }
    }

    /**
     * Metodo que actualiza la tabla de mesas.
     *
     * @param tabla representa la tabla que se va aactualizar
     */
    private void actualizarTablaMesas(javax.swing.JTable tabla) {
        ReservaDAO reservaDAO = new ReservaDAO();

        mesas = reservaDAO.mesas();
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0);
        String filtroUbi = (String) (jComboBoxClienteReservaUbicacion.
                getSelectedItem());
        String filtroCap = (String) (jComboBoxClienteReservaCapacidad.
                getSelectedItem());

        for (Mesa m : mesas) {
            String disponible = "No";
            agendaR = new EmpleadoDAO().obtenerHoraAperturaCierre();
            if (reservaDAO.mesaDisponible(m.getNumero(),
                    fechaBuscar,
                    horaBuscar)
                    && horaBuscar.isAfter(agendaR.getHoraApertura().
                            minusSeconds(1))
                    && horaBuscar.isBefore(agendaR.getHoraCierre())) {
                disponible = "Sí";
            }
            if (filtroUbi.equals("Cualquiera") || filtroUbi.equals(String.
                    valueOf(m.getUbicacion()))) {
                if (filtroCap.equals("Cualquiera") || filtroCap.equals(String.
                        valueOf(m.getCapacidad()))) {
                    model.addRow(new Object[]{
                        m.getNumero(),
                        m.getCapacidad(),
                        m.getUbicacion(),
                        disponible
                    });
                }
            }
        }
    }

    /**
     * Metodo que ordena la tabla del historial de reservas
     */
    private void ordenarTablaHistorial() {
        Collections.sort(reservas,
                new Comparator<Reserva>() {
            @Override
            public int compare(Reserva r1,
                    Reserva r2) {
                int comparacionFecha = r1.getFecha().compareTo(r2.getFecha());
                if (comparacionFecha == 0) {
                    return r1.getFecha().compareTo(r2.getFecha());
                } else {
                    return r1.getHora().compareTo(r2.getHora());
                }
            }
        });
    }

    /**
     * Metodo que se produce al apretar el boton salir cierra la ventana ClView
     * y abre la de inicio
     *
     * @param evt es el evento de apretar el boton salir
     */
    private void jToggleButton_cliente_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_cliente_SalirActionPerformed
        if (evt.getSource() == jToggleButton_cliente_Salir) {
            dispose();
            Inicio login = new Inicio();
            login.setVisible(true);
        }
    }//GEN-LAST:event_jToggleButton_cliente_SalirActionPerformed

    private void jTextField_fechaNewReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_fechaNewReservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_fechaNewReservaActionPerformed
    /**
     * Metodo que se produce al apretar el boton Nueva reserva Verifica que la
     * fecha ingresada sea valida,que se haga con una anticipacion mayor a 1 dia
     * Verifica que esa mesa ya no se encuentre ocupada en la misma fecha y
     * hora. Verifica que se ingrese una tarjeta con todos sus datos y que su
     * numero tenga menos de 17 caracteres Actualiza la tabla de mesas
     * disponibles en esa fecha, la tabla del historial de reservas del cliente
     * y las reservas generales del restaurante
     *
     * @param evt es el evento que se produce al apretar el boton Nueva Reserva
     */
    private void jButton_nuevaReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nuevaReservaActionPerformed
        String auxFecha = jTextField_fechaNewReserva.getText();
        String auxHora = (String) jComboBox_horaBuscar.getSelectedItem() + ":00:00";
        ReservaDAO rDAO = new ReservaDAO();
        reserva.setCliente(cliente1);
        if (ClienteController.esFormatoFechaValido(auxFecha)) {
            try {
                fechaBuscar = LocalDate.parse(auxFecha,
                        DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            } catch (java.time.format.DateTimeParseException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Ingrese una fecha válida",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            horaBuscar = LocalTime.parse(auxHora,
                    DateTimeFormatter.ofPattern("HH:mm:ss"));
            if (LocalDateTime.now().isBefore(LocalDateTime.of(fechaBuscar,
                    horaBuscar))) {

            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No puede hacer una reservación"
                                + " con menos de un día de antelación",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Ingrese una fecha en formato dd/mm/aaaa",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        actualizarTablaMesas(jTable_mesasDisponibles);
        reserva.setFecha(fechaBuscar);
        reserva.setHora(horaBuscar);
        reserva.setComentario(jTextField_comentario.getText());
        Mesa mesaR = new Mesa();
        int numM = Integer.parseInt((String) jComboBoxClienteReservaMesa.
                getSelectedItem());
        mesaR.setNumero(numM);

        reserva.setMesa(mesaR.obtenerCapUbi());

        TarjetaDAO tarjetaR = new TarjetaDAO();
        String nombreTarjeta = jTextFieldCienteReservaNombreT.getText();
        String emisorTarjeta = this.jTextFieldClienteReservaEmiT.getText();
        String numeroTarjeta = this.jTextFieldClienteReservanNumT.getText();
        String codigoSegTarjeta = this.jTextFieldClienteReservaCodSeg.getText();

        if (nombreTarjeta.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No ingreso el nombre de la  tarjeta",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (emisorTarjeta.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No ingreso el emisor de la tarjeta",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (numeroTarjeta.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No ingreso el"
                    + "numero de la tarjeta",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            if (numeroTarjeta.length() > 16) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "El numero de la tarjeta no puede"
                                + " tener más de 16 digitos",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        if (codigoSegTarjeta.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No ingreso el codigo de seguridad"
                            + " de la tarjeta",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            if (codigoSegTarjeta.length() > 3) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "La tarjeta no"
                        + " puede tener un codigo"
                        + " de seguridad de más de 3 digitos",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        boolean actualizar = tarjetaR.existeTarjeta(numeroTarjeta);
        if (actualizar) {
            Tarjeta tar = new Tarjeta(nombreTarjeta,
                    emisorTarjeta,
                    numeroTarjeta,
                    codigoSegTarjeta);
            if (!(tarjetaR.tarjetaValida(tar))) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Datos de tarjeta Incorrectos",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        tarjeta.setNombre(nombreTarjeta);
        tarjeta.setEmisor(emisorTarjeta);
        tarjeta.setNumero(numeroTarjeta);
        tarjeta.setCodSeguridad(codigoSegTarjeta);
        if (!actualizar) {
            reserva.setTarjeta(tarjeta);
        }
        agendaR = new EmpleadoDAO().obtenerHoraAperturaCierre();
        if (rDAO.mesaDisponible(mesaR.getNumero(),
                fechaBuscar,
                horaBuscar)
                && horaBuscar.isAfter(agendaR.getHoraApertura().minusSeconds(1))
                && horaBuscar.isBefore(agendaR.getHoraCierre())) {
            boolean reservaHecha = rDAO.realizarReserva(reserva);

            if (reservaHecha) {
                if (!actualizar) {
                    tarjetaR.guardarTarjeta(tarjeta);
                }
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Reserva realizada con éxito.",
                        "Éxito",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                this.actualizarTablaMesas(jTable_mesasDisponibles);
                MensajeReserva mensajeR = new MensajeReserva(fechaBuscar,
                        horaBuscar,
                        numM,
                        mesaR.getCapacidad(),
                        mesaR.getUbicacion(),
                        tarjeta.getNumero(),
                        reserva.getComentario(),
                        this);
                this.setVisible(false);
                reserva = new Reserva();
                tarjeta = new Tarjeta();

            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "La mesa no se encuentra disponible"
                            + " en la fecha y hora ingresada.",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jButton_nuevaReservaActionPerformed


    private void jTextFieldClienteReservanNumTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldClienteReservanNumTActionPerformed

    }//GEN-LAST:event_jTextFieldClienteReservanNumTActionPerformed

    private void jComboBoxClienteReservaMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxClienteReservaMesaActionPerformed

    }//GEN-LAST:event_jComboBoxClienteReservaMesaActionPerformed
    /**
     * Cuando se lo presiona llama al metodo actualizarTablaHistorial.
     *
     * @param evt evento que ocurre al presionar el boton.
     */
    private void jBVerHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerHistorialActionPerformed
        this.actualizarTablaHistorial();
    }//GEN-LAST:event_jBVerHistorialActionPerformed


    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed
    /**
     * Se encarga de revisar que la fecha ingresada sea valida y llama a la
     * funcion actualizarTablaMesas para mostrar los datos en la tabla
     *
     * @param evt representa el evento que ocurre al presionar el boton
     */
    private void JButton_confirmarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButton_confirmarFechaActionPerformed
        String auxFecha = jTextField_fechaNewReserva.getText();
        String auxHora = (String) jComboBox_horaBuscar.getSelectedItem() + ":00:00";
        if (ClienteController.esFormatoFechaValido(auxFecha)) {
            try {
                fechaBuscar = LocalDate.parse(auxFecha,
                        DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            } catch (java.time.format.DateTimeParseException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Ingrese una fecha válida",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            horaBuscar = LocalTime.parse(auxHora,
                    DateTimeFormatter.ofPattern("HH:mm:ss"));
            if (LocalDateTime.now().isBefore(LocalDateTime.of(fechaBuscar,
                    horaBuscar))) {
                actualizarTablaMesas(jTable_mesasDisponibles);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No puede hacer una reservación"
                                + " con menos de un día de antelación",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Ingrese una fecha en formato dd/mm/aaaa",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_JButton_confirmarFechaActionPerformed
    /**
     * Accion de apretar el boton ver datos. Muestra el nombre,correo y telefono
     * del cliente.
     *
     * @param evt es el evento de apretar el boton ver datos.
     */
    private void jBVerDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerDatosActionPerformed

        int idCliente = cliente1.getId();
        ClienteDAO cliente = new ClienteDAO();
        String vector[] = cliente.mostrarDatos(idCliente);
        nombreClienteBase.setText(vector[0]);
        correoClienteBase.setText(vector[1]);
        telefonoClienteBase.setText(vector[2]);
    }//GEN-LAST:event_jBVerDatosActionPerformed

    private void nombreClienteBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreClienteBaseActionPerformed

    }//GEN-LAST:event_nombreClienteBaseActionPerformed

    private void jTxtClientePerfilNuevoCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtClientePerfilNuevoCorreoActionPerformed

    }//GEN-LAST:event_jTxtClientePerfilNuevoCorreoActionPerformed
    /**
     * Es el metodo ejecutado cuando se aprieta el boton acutalizar verifica que
     * los campos ingresados sean validos para actualizar esa informacion en la
     * base de datos.Confirma si se pudo realizar o envia un alerta para que
     * sean los datos completados correctamente o que ocurrio un error
     *
     * @param evt es el evento de apretar el boton actualizar
     */
    private void jButton_cliente_perfil_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cliente_perfil_actualizarActionPerformed
        int idCliente = cliente1.getId();
        String telefonoIngresado = jTxtClientePerfilTelefono.getText();
        String correoIngresado = jTxtClientePerfilNuevoCorreo.getText();

        if (correoIngresado.isEmpty() && telefonoIngresado.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Por favor, ingrese un correo o telefono"
                            + " para actualizar sus datos.",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;

        }
        ClienteDAO cliente = new ClienteDAO();
        // Llamar al método actualizarInformacion del objeto clienteDAO
        boolean resultadoC;
        boolean resultadoT;

        if (!(telefonoIngresado.isEmpty())) {
            resultadoT = cliente.actualizarTelefono(idCliente,
                    telefonoIngresado);

            if (resultadoT) {
                cliente1.actualizarInformacion(cliente1.getCorreo(),
                        telefonoIngresado);
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Telefono actualizado",
                        "Actualizar Datos de Contacto",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No se pudo actualizar el telefono.",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        }
        if (!(correoIngresado.isEmpty())) {

            resultadoC = cliente.actualizarCorreo(idCliente,
                    correoIngresado);
            if (resultadoC) {
                cliente1.actualizarInformacion(correoIngresado,
                        cliente1.getTelefono());
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Correo actualizado",
                        "Actualizar Datos de Contacto",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No se pudo actualizar el correo.",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton_cliente_perfil_actualizarActionPerformed
    /**
     * Es el metodo que se ejecuta al apretar el boton modificar en reservas
     * Verifica que haya una reserva seleccionada para modificar, que esta
     * modificacion se haga con mas de un dia de anticipacion y que las
     * modificaciones que se realicen sean correctas y cumplan con las
     * condiciones de una reserva.
     *
     * @param evt evento que ocurre al presionar el boton modificar.
     */
    private void jButton_cliente_modificar_reservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cliente_modificar_reservaActionPerformed
        if (reservas == null || reservas.isEmpty() || jTable_historialCliente.
                getSelectedRow() == -1) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Seleccione una reserva del historial",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        reserva = reservas.get(jTable_historialCliente.getSelectedRow());
        ReservaDAO rDAO = new ReservaDAO();

        if (((long) (LocalDateTime.now().until(LocalDateTime.of(reserva.
                getFecha(),
                reserva.getHora()),
                ChronoUnit.HOURS))) <= 24) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No puede modificar una reserva"
                            + " con menos de 24 horas de antelación",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        String auxFecha = jTxt_cliente_fecha.getText();
        reserva.setCliente(cliente1);
        System.out.println(reserva.getTarjeta().getNumero());

        fechaBuscar = reserva.getFecha();
        horaBuscar = reserva.getHora();
        if (!auxFecha.equals("")) {
            if (ClienteController.esFormatoFechaValido(auxFecha)) {
                try {
                    fechaBuscar = LocalDate.parse(auxFecha,
                            DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                } catch (java.time.format.DateTimeParseException e) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Ingrese una fecha válida",
                            "Advertencia",
                            javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (((long) (LocalDateTime.now().until(LocalDateTime.of(
                        fechaBuscar,
                        horaBuscar),
                        ChronoUnit.HOURS))) >= 24) {
                    reserva.setFecha(fechaBuscar);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "No puede hacer una reservación"
                                    + " con menos de un día de antelación",
                            "Advertencia",
                            javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Ingrese una fecha en formato dd/mm/aaaa",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        String auxHora = (String) jComboBoxHoraBuscarMod.getSelectedItem();
        if (!auxHora.equals("No cambiar")) {
            auxHora += ":00:00";
            horaBuscar = LocalTime.parse(auxHora,
                    DateTimeFormatter.ofPattern("HH:mm:ss"));
            reserva.setHora(horaBuscar);
        }

        if (jTextField_comentarioMod.getText().equals("")) {
            reserva.setComentario(jTextField_comentarioMod.getText());
        }
        if (!jComboBoxMesaMod.getSelectedItem().toString().equals("No cambiar")) {
            Mesa mesaR = new Mesa();
            int numM = Integer.parseInt((String) jComboBoxMesaMod.
                    getSelectedItem());
            mesaR.setNumero(numM);
            reserva.setMesa(mesaR.obtenerCapUbi());
        }

        if (!jTxtNombreTarjetaMod.getText().equals("")
                | !jTxtEmisorTarjetaMod.getText().equals("")
                | !jTxtNumeroTarjetaMod.getText().equals("")
                | !jTxtCodigoTarjetaMod.getText().equals("")) {

            tarjeta.setNombre(jTxtNombreTarjetaMod.getText());
            tarjeta.setEmisor(jTxtEmisorTarjetaMod.getText());
            tarjeta.setNumero(jTxtNumeroTarjetaMod.getText());
            tarjeta.setCodSeguridad(jTxtCodigoTarjetaMod.getText());
            TarjetaDAO tarjetaR = new TarjetaDAO();
            //revisar si esta en la base de datos la nueva 
            if (tarjetaR.existeTarjeta(tarjeta.getNumero())) {
                if (!(tarjetaR.tarjetaValida(tarjeta))) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Los datos"
                            + " de la tarjeta son incorrectos",
                            "Advertencia",
                            javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                } else {
                    reserva.setTarjeta(tarjeta);
                }
            } else {
                if (tarjetaR.guardarTarjeta(tarjeta)) {
                    reserva.setTarjeta(tarjeta);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this,
                            "Los datos de"
                            + " la tarjeta son incorrectos",
                            "Advertencia",
                            javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        }

        agendaR = new EmpleadoDAO().obtenerHoraAperturaCierre();
        if (rDAO.mesaDisponible(reserva.getMesa().getNumero(),
                fechaBuscar,
                horaBuscar)
                && horaBuscar.isAfter(agendaR.getHoraApertura().minusSeconds(1))
                && horaBuscar.isBefore(agendaR.getHoraCierre())) {
            if (rDAO.modificarReserva(reserva)) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Reserva modificada con éxito.",
                        "Éxito",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                MensajeReserva mensajeR = new MensajeReserva(fechaBuscar,
                        horaBuscar,
                        reserva.getMesa().getNumero(),
                        reserva.getMesa().getCapacidad(),
                        reserva.getMesa().getUbicacion(),
                        reserva.getTarjeta().getNumero(),
                        reserva.getComentario(),
                        this);
                this.setVisible(false);
                reserva = new Reserva();
                tarjeta = new Tarjeta();
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "La mesa no se encuentra disponible",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }
        actualizarTablaMesas(jTable_mesasDisponibles);
        this.actualizarTablaHistorial();

    }//GEN-LAST:event_jButton_cliente_modificar_reservaActionPerformed

    private void jComboBoxUbiModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUbiModActionPerformed

    }//GEN-LAST:event_jComboBoxUbiModActionPerformed

    private void jComboBoxMesaModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMesaModActionPerformed

    }//GEN-LAST:event_jComboBoxMesaModActionPerformed

    private void jTxtClientePerfilTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtClientePerfilTelefonoActionPerformed

    }//GEN-LAST:event_jTxtClientePerfilTelefonoActionPerformed
    /**
     * Metodo que se ejecuta al presionar el boton Ver. Se encarga de que la
     * tabla muestre las mesas disponibles en la fecha de la reserva marcada.
     *
     * @param evt es el evento de presionar el boton ver
     */
    private void jBVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerActionPerformed
        if (reservas == null || reservas.isEmpty() || jTable_historialCliente.
                getSelectedRow() == -1) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Seleccione una reserva del historial",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        reserva = reservas.get(jTable_historialCliente.getSelectedRow());

        String auxFecha = jTxt_cliente_fecha.getText();
        String auxHora = (String) jComboBoxHoraBuscarMod.getSelectedItem();
        if (ClienteController.esFormatoFechaValido(auxFecha)) {
            try {
                fechaBuscar = LocalDate.parse(auxFecha,
                        DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            } catch (java.time.format.DateTimeParseException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Ingrese una fecha válida",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            if (jTxt_cliente_fecha.getText().equals("")) {
                if (reserva.getHora() != null) {
                    fechaBuscar = reserva.getFecha();
                }

            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Ingrese una fecha en formato dd/mm/aaaa",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

        }
        if (!auxHora.equals("No cambiar")) {
            auxHora += ":00:00";
            horaBuscar = LocalTime.parse(auxHora,
                    DateTimeFormatter.ofPattern("HH:mm:ss"));
        } else {
            horaBuscar = reserva.getHora();
        }

        if (LocalDateTime.now().isBefore(LocalDateTime.of(fechaBuscar,
                horaBuscar))) {
            if (((long) (LocalDateTime.now().until(LocalDateTime.of(fechaBuscar,
                    horaBuscar),
                    ChronoUnit.HOURS))) >= 24) {

                actualizarTablaMesas(jTable_mesasDisponiblesMod);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "No puede hacer una reservación"
                                + " con menos de un día de antelación",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No puede hacer una reservación"
                            + " con menos de un día de antelación",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jBVerActionPerformed

    private void jTxtEmisorTarjetaModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtEmisorTarjetaModActionPerformed

    }//GEN-LAST:event_jTxtEmisorTarjetaModActionPerformed

    private void telefonoClienteBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoClienteBaseActionPerformed

    }//GEN-LAST:event_telefonoClienteBaseActionPerformed

    private void jComboBoxHoraBuscarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHoraBuscarModActionPerformed

    }//GEN-LAST:event_jComboBoxHoraBuscarModActionPerformed
    /**
     * Es el metodo que se ejecuta al apretar el boton Cancelar, Se elimina la
     * reserva seleccionada, se verifica que el cliente seleccione la reserva a
     * eliminar, que la eliminacion sea con mas de 24 horas de anticipacion. Se
     * envia mensaje de confirmacion. error o que no se puede realizar la accion
     *
     * @param evt es el evento de apretar el boton cancelar
     */
    private void jButton_cliente_eliminar_reserva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cliente_eliminar_reserva1ActionPerformed
        reserva = reservas.get(jTable_historialCliente.getSelectedRow());
        ReservaDAO rDAO = new ReservaDAO();
        if (((long) (LocalDateTime.now().until(LocalDateTime.of(reserva.
                getFecha(),
                reserva.getHora()),
                ChronoUnit.HOURS))) >= 24) {
            if (rDAO.eliminarReserva(reserva)) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Reserva eliminada con éxito.",
                        "Éxito",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                this.actualizarTablaHistorial();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Error al eliminar reserva",
                        "Advertencia",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No puede eliminar una reserva"
                            + " con menos de 24 horas de antelación",
                    "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_cliente_eliminar_reserva1ActionPerformed

    private void jTxt_cliente_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxt_cliente_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxt_cliente_fechaActionPerformed

    private void jComboBoxCapModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCapModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCapModActionPerformed

    private void jTxtNombreTarjetaModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtNombreTarjetaModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtNombreTarjetaModActionPerformed

    private void jTxtCodigoTarjetaModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtCodigoTarjetaModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtCodigoTarjetaModActionPerformed
    /**
     * Metodo que envia un mensaje al cliente al ingresar al sistema Este
     * mensaje se envia cuando este cliente tiene una reserva dentro de los
     * proximos 5 dias
     */
    private void avisoPrevioReserva() {
        ReservaDAO reservaDAO = new ReservaDAO();
        ArrayList<Reserva> auxReservas = reservaDAO.obtenerReservasHistorial(
                cliente1);
        for (Reserva res : auxReservas) {
            if (res.getFecha().isAfter(LocalDate.now())
                    && res.getFecha().isBefore(LocalDate.now().plusDays(5))) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Tiene una reserva próxima",
                        "Aviso",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                break;
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButton_confirmarFecha;
    private javax.swing.JTextField correoClienteBase;
    private javax.swing.JPanel historial_cliente;
    private javax.swing.JButton jBVer;
    private javax.swing.JButton jBVerDatos;
    private javax.swing.JButton jBVerHistorial;
    public javax.swing.JButton jButton_cliente_eliminar_reserva1;
    public javax.swing.JButton jButton_cliente_modificar_reserva;
    public javax.swing.JButton jButton_cliente_perfil_actualizar;
    public javax.swing.JButton jButton_nuevaReserva;
    private javax.swing.JComboBox<String> jComboBoxCapMod;
    private javax.swing.JComboBox<String> jComboBoxClienteReservaCapacidad;
    public javax.swing.JComboBox<String> jComboBoxClienteReservaMesa;
    public javax.swing.JComboBox<String> jComboBoxClienteReservaUbicacion;
    private javax.swing.JComboBox<String> jComboBoxHoraBuscarMod;
    private javax.swing.JComboBox<String> jComboBoxMesaMod;
    private javax.swing.JComboBox<String> jComboBoxUbiMod;
    private javax.swing.JComboBox<String> jComboBox_horaBuscar;
    private javax.swing.JLabel jLNuevoCorreo;
    private javax.swing.JLabel jLTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane_cliente;
    private javax.swing.JTable jTable1;
    public javax.swing.JTable jTable_historialCliente;
    private javax.swing.JTable jTable_mesasDisponibles;
    private javax.swing.JTable jTable_mesasDisponiblesMod;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextPane jTextFieldCienteReservaNombreT;
    private javax.swing.JTextField jTextFieldClienteReservaCodSeg;
    public javax.swing.JTextPane jTextFieldClienteReservaEmiT;
    public javax.swing.JTextField jTextFieldClienteReservanNumT;
    public javax.swing.JTextArea jTextField_comentario;
    private javax.swing.JTextArea jTextField_comentarioMod;
    public javax.swing.JTextField jTextField_fechaNewReserva;
    public javax.swing.JToggleButton jToggleButton_cliente_Salir;
    public javax.swing.JTextField jTxtClientePerfilNuevoCorreo;
    public javax.swing.JTextField jTxtClientePerfilTelefono;
    private javax.swing.JTextField jTxtCodigoTarjetaMod;
    private javax.swing.JTextField jTxtEmisorTarjetaMod;
    private javax.swing.JTextField jTxtNombreTarjetaMod;
    private javax.swing.JTextField jTxtNumeroTarjetaMod;
    public javax.swing.JTextField jTxt_cliente_fecha;
    private javax.swing.JTextField nombreClienteBase;
    private javax.swing.JPanel realizaReserva_cliente;
    private javax.swing.JTextField telefonoClienteBase;
    // End of variables declaration//GEN-END:variables
}
