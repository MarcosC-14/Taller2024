/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controladores.ClienteController;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.MonthDay;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import modelo.Administrador;
import modelo.BloqueoMesaEventoEspecial;
import modelo.Cliente;
import modelo.Empleado;
import modelo.Reserva;
import modelo.Rol;
import modelo.Reserva;
import persistencia.ClasesDao.ClienteDAO;
import persistencia.ClasesDao.EmpleadoDAO;
import persistencia.ClasesDao.ReservaDAO;

/**
 * Jframe AdView al cual solo acceden los usuarios que son Administradores.
 * Dentro de esta interfaz grafica el usuario puede visualizar todas las
 * reservas, o filtarlas segun diferentes criterios. observar todos los cliente
 * y filtrarlos por su no asistencia o ver el mejor cliente. Observar todas las
 * mesas y realizar modificaciones en ellas como agreagar, eliminar, quitar
 * sillas,cambiar mesas de lugar o eliminar una mesa. Puede realizar el bloqueo
 * de mesas cuando estas son requeridas para un evento especial Puede visualizar
 * un analisis durante un periodo de tiempo. El administrador puede visualizar,
 * agregar o eliminar empleados.
 *
 * @author Rebechi
 * @version 27/10/2024
 */
public class AdView extends javax.swing.JFrame {

    private DefaultTableModel tabla;
    private Administrador administrador;
    private EmpleadoDAO empleadoDAO = new EmpleadoDAO();
    private ClienteDAO clienteDAO = new ClienteDAO();
    private Cliente cliente = new Cliente();
    private ReservaDAO reservaDAO = new ReservaDAO();
    ArrayList<BloqueoMesaEventoEspecial> bmes = new ArrayList<BloqueoMesaEventoEspecial>();
    BloqueoMesaEventoEspecial bme;
    ArrayList<Reserva> reservas;
    private LocalDate fechaInicial;
    private LocalDate fechaFinal;

    /**
     * Creates new form AdView
     *
     */
    public AdView(Administrador administrador) {
        initComponents();
        setSize(800, 500);
        setResizable(false);
        setTitle("Panel de administracion");
        setLocationRelativeTo(null);
        this.administrador = administrador;
        tabla = (DefaultTableModel) jTableReporteReservas.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton_Administrador_salir = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_reservasAdmin = new javax.swing.JTable();
        jTextField_administrador_reserva_id = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextField_administrador_reserva_fecha = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField_administrador_reserva_cliente = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jButton_administrador_reservas_ver = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_clientesAdmin = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_mesasAdmin = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jComboBox_administrador_mesas_ubi = new javax.swing.JComboBox<>();
        btn_administrador_mesa_modificar = new javax.swing.JButton();
        btn_administrador_mesa_eliminar = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jTextField_administrador_mesa_cliente = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton_administrador_empleado_agregar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_empleadosAdmin = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox_administrador_empleado_rol = new javax.swing.JComboBox<>();
        jTextField_administrador_empleado_nombre = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextField_administrador_empleado_correo = new javax.swing.JTextField();
        jButtonVerEmpleados = new javax.swing.JButton();
        jTextField_administrador_empleado_contrasenia = new javax.swing.JPasswordField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableReporteReservas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jBReservasFuturas = new javax.swing.JButton();
        jBTodasLasReservas = new javax.swing.JButton();
        jBReservasFecha = new javax.swing.JButton();
        jTxtFechaInicial = new javax.swing.JTextField();
        jTxtFechaFinal = new javax.swing.JTextField();
        jTxtCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel_eventosEspeciales = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_fechaEvento = new javax.swing.JTextField();
        jButton_bloqueoMesas = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_bloqueoMesas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxHoraInicio = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxHoraFin = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxMesas = new javax.swing.JComboBox<>();
        jButtonVerBloqueMesaEvento = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jTextFieldVerano = new javax.swing.JTextField();
        jTextFieldOto√±o = new javax.swing.JTextField();
        jTextFieldInvierno = new javax.swing.JTextField();
        jTextFieldPrimavera = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Restaurante Floripa");

        jButton_Administrador_salir.setText("Salir");
        jButton_Administrador_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Administrador_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 437, Short.MAX_VALUE)
                .addComponent(jButton_Administrador_salir)
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton_Administrador_salir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 60));

        jTabbedPane2.setBackground(new java.awt.Color(0, 102, 102));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Administrador"));
        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 0));
        jTabbedPane2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane2KeyPressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Reservas"));
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_reservasAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Fecha", "Cliente", "Mesa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_reservasAdmin);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 640, 250));
        jPanel4.add(jTextField_administrador_reserva_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 60, 20));

        jLabel27.setText("Id:");
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel28.setText("Fecha:");
        jPanel4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, -1));
        jPanel4.add(jTextField_administrador_reserva_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 60, 20));

        jLabel29.setText("Cliente:");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));
        jPanel4.add(jTextField_administrador_reserva_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 90, -1));

        jLabel30.setText("Mesa:");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        jButton_administrador_reservas_ver.setText("Ver");
        jButton_administrador_reservas_ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_administrador_reservas_verActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_administrador_reservas_ver, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "1", "2", "3", "4", "5", "6", "7", "8" }));
        jPanel4.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));

        jTabbedPane2.addTab("Reservas", jPanel4);

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Perfil Clientes"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(0, 51, 51));
        jPanel9.setForeground(new java.awt.Color(0, 0, 0));

        jTable_clientesAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_clientesAdmin);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 640, 250));

        jButton1.setText("Todos los clientes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jButton7.setText("Mejor Cliente");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        jButton3.setText("Clientes que no asistieron en el √∫ltimo a√±o");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jTabbedPane2.addTab("Reporte Clientes", jPanel5);

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Mesas"));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(0, 102, 102));

        jTable_mesasAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Ubicacion", "Capacidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable_mesasAdmin);

        jLabel20.setText("Ubicacion:");

        jComboBox_administrador_mesas_ubi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Interior", "Exterior" }));

        btn_administrador_mesa_modificar.setText("Modificar");

        btn_administrador_mesa_eliminar.setText("Eliminar");
        btn_administrador_mesa_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_administrador_mesa_eliminarActionPerformed(evt);
            }
        });

        jLabel22.setText("Cliente:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_administrador_mesas_ubi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_administrador_mesa_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_administrador_mesa_modificar))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_administrador_mesa_eliminar)
                                .addGap(2, 2, 2)))
                        .addGap(18, 18, 18)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jComboBox_administrador_mesas_ubi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(jTextField_administrador_mesa_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_administrador_mesa_modificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_administrador_mesa_eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        jPanel6.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 640, 250));

        jLabel19.setText("Numero");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jTabbedPane2.addTab("Mesas", jPanel6);

        jPanel7.setBackground(new java.awt.Color(0, 51, 51));

        jPanel11.setBackground(new java.awt.Color(0, 102, 102));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Empleados"));

        jButton_administrador_empleado_agregar.setText("Agregar");
        jButton_administrador_empleado_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_administrador_empleado_agregarActionPerformed(evt);
            }
        });

        jLabel23.setText("Contrase√±a: ");

        jTable_empleadosAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Correo", "Rol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable_empleadosAdmin);

        jLabel24.setText("Correo:");

        jLabel25.setText("Rol:");

        jComboBox_administrador_empleado_rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Mesero", "Recepcionista" }));
        jComboBox_administrador_empleado_rol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_administrador_empleado_rolActionPerformed(evt);
            }
        });

        jTextField_administrador_empleado_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_administrador_empleado_nombreActionPerformed(evt);
            }
        });

        jLabel26.setText("Nombre:");

        jButtonVerEmpleados.setText("Ver");
        jButtonVerEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerEmpleadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_administrador_empleado_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_administrador_empleado_contrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_administrador_empleado_rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_administrador_empleado_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jButtonVerEmpleados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_administrador_empleado_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField_administrador_empleado_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jComboBox_administrador_empleado_rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel23)
                    .addComponent(jTextField_administrador_empleado_contrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_administrador_empleado_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVerEmpleados)
                    .addComponent(jButton_administrador_empleado_agregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        jTabbedPane2.addTab("Empleados", jPanel7);

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));

        jTableReporteReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mesa", "Fecha", "Hora", "Ocupaci√≥n", "Finalizaci√≥n", "Cliente", "Comensales"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableReporteReservas);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Correo");

        jBReservasFuturas.setText("Reservas Futuras");
        jBReservasFuturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReservasFuturasActionPerformed(evt);
            }
        });

        jBTodasLasReservas.setText("Todas las reservas ");
        jBTodasLasReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTodasLasReservasActionPerformed(evt);
            }
        });

        jBReservasFecha.setText("Reservas Fecha");
        jBReservasFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReservasFechaActionPerformed(evt);
            }
        });

        jTxtFechaInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFechaInicialActionPerformed(evt);
            }
        });

        jTxtFechaFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFechaFinalActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fechas");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Inicial");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Final");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jTxtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel7))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBTodasLasReservas)
                            .addComponent(jBReservasFuturas)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel8))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTxtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jBReservasFecha)))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBReservasFuturas)
                        .addGap(18, 18, 18)
                        .addComponent(jBTodasLasReservas)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBReservasFecha)))
                .addGap(47, 47, 47))
        );

        jTabbedPane2.addTab("Reporte Reservas", jPanel8);

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_eventosEspeciales.setBackground(new java.awt.Color(0, 102, 102));
        jPanel_eventosEspeciales.setBorder(javax.swing.BorderFactory.createTitledBorder("Bloqueo / Eventos"));

        jLabel13.setText("Fecha:");

        jTextField_fechaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_fechaEventoActionPerformed(evt);
            }
        });

        jButton_bloqueoMesas.setText("Bloquear");
        jButton_bloqueoMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_bloqueoMesasActionPerformed(evt);
            }
        });

        jTable_bloqueoMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mesa", "Fecha", "Hora Inicio", "Hora Fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable_bloqueoMesas);

        jLabel4.setText("Hora Inicio");

        jComboBoxHoraInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22", "00" }));

        jLabel5.setText("Hora Fin");

        jComboBoxHoraFin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20", "22" }));

        jLabel6.setText("Mesa");

        jComboBoxMesas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "1", "2", "3", "4", "5", "6", "7", "8" }));

        jButtonVerBloqueMesaEvento.setText("Ver");
        jButtonVerBloqueMesaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerBloqueMesaEventoActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_eventosEspecialesLayout = new javax.swing.GroupLayout(jPanel_eventosEspeciales);
        jPanel_eventosEspeciales.setLayout(jPanel_eventosEspecialesLayout);
        jPanel_eventosEspecialesLayout.setHorizontalGroup(
            jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxMesas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_eventosEspecialesLayout.createSequentialGroup()
                        .addGroup(jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonVerBloqueMesaEvento))
                            .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_fechaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                                .addComponent(jButton_bloqueoMesas)))
                        .addGap(83, 83, 83))))
            .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addGap(83, 83, 83))
        );
        jPanel_eventosEspecialesLayout.setVerticalGroup(
            jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_eventosEspecialesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField_fechaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_bloqueoMesas)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxMesas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel_eventosEspecialesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVerBloqueMesaEvento)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTextField_fechaEvento.getAccessibleContext().setAccessibleName("");

        jPanel12.add(jPanel_eventosEspeciales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 390));
        jPanel_eventosEspeciales.getAccessibleContext().setAccessibleName("Bloqueo eventos");

        jTabbedPane2.addTab("Bloqueo / Eventos", jPanel12);

        jPanel14.setBackground(new java.awt.Color(0, 102, 102));

        jTextFieldVerano.setEditable(false);
        jTextFieldVerano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldVeranoActionPerformed(evt);
            }
        });

        jTextFieldOto√±o.setEditable(false);

        jTextFieldInvierno.setEditable(false);

        jTextFieldPrimavera.setEditable(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Verano");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Oto√±o");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Invierno");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel31.setText("Primavera");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel32.setText("Concurrencia por estacion");

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton8.setText("Ver");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldPrimavera, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldInvierno, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldOto√±o, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldVerano, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jButton8))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jLabel32)))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldVerano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldOto√±o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInvierno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrimavera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Analisis Periodos Tiempo ", jPanel13);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 810, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * /**
     * el metodo actualizarTablaBloqueoEvento se encarga de generar una
     * actualizacion a la tabla que muestra los datos de los eventos cuando
     * surge alguna modificacion para que estos datos se muestren de forma
     * correcta
     */

    private void actualizarTablaBloqueoMesaEvento() {

        bmes = empleadoDAO.obtenerBloqueosMesasEventosEspeciales();

        DefaultTableModel model = (DefaultTableModel) jTable_bloqueoMesas.getModel();
        model.setRowCount(0); //Elimina las filas existentes;

        for (BloqueoMesaEventoEspecial b : bmes) {
            String horaInicio;
            if (b.getHoraInicio() == null) {
                horaInicio = "";
            } else {
                horaInicio = b.getHoraInicio().format(DateTimeFormatter.ofPattern("HH:mm:ss"));
            }
            String horaFin;
            if (b.getHoraFin() == null) {
                horaFin = "";
            } else {
                horaFin = b.getHoraFin().format(DateTimeFormatter.ofPattern("HH:mm:ss"));
            }
            model.addRow(new Object[]{
                b.getNumMesa() == 0 ? "Todas" : b.getNumMesa(),
                b.getFecha().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                horaInicio,
                horaFin
            });
        }

    }

    /**
     * con el array list de obtenerReservasHistorial. los que tengan una fecha
     * anterior a localdatetime.now los remueve del arrayList<reserva>,
     * ReservaDAo local. guarda en la tabla, al inicio limpiar la tabla
     */
    /**
     * con obtenerClientes de cliente dao, llama a la funcion para tener las
     * asistencias y guarda en una varibles y luego compara con el siguiente, si
     * es mayor cambia, si no queda igual
     */
    /**
     * esta en reservaDAo
     */
    /**
     * metodo reservaDAo
     */
    /**
     * arrayList.size para la estacion /** Evento del boton salir, para que
     * cuando sea oprimido cierre el jFrame de AdView y abra el Inicio
     *
     * @param evt es evento de presionar el boton
     */

    private void jButton_Administrador_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Administrador_salirActionPerformed
        dispose();
        Inicio login = new Inicio();
        login.setVisible(true);
    }//GEN-LAST:event_jButton_Administrador_salirActionPerformed
    /**
     * el metodo actualizarTablaMesas se encarga de generar una actualizacion a
     * la tabla que muestra los datos de las mesas cuando surge alguna
     * modificacion para que estos datos se muestren de forma correcta
     */
    private void actualizarTablaMesas() {

        ArrayList<Cliente> clientes = clienteDAO.obtenerClientes();

        DefaultTableModel model = (DefaultTableModel) this.jTable_clientesAdmin.getModel();
        model.setRowCount(0); // Limpia todas las filas existentes        

        for (Cliente c : clientes) {
            model.addRow(new Object[]{
                c.getId(),
                c.getNombre(),
                c.getTelefono(),
                c.getCorreo()
            });
        }

    }

    /**
     * el metodo actualizarTablaCliente se encarga de generar una actualizacion
     * a la tabla que muestra los datos de los clientes cuando surge alguna
     * modificacion para que estos datos se muestren de forma correcta
     */
    private void actualizarTablaCliente(ArrayList<Cliente> clientes) {

        DefaultTableModel model = (DefaultTableModel) this.jTable_clientesAdmin.getModel();
        model.setRowCount(0); // Limpia todas las filas existentes        

        for (Cliente c : clientes) {
            model.addRow(new Object[]{
                c.getId(),
                c.getNombre(),
                c.getTelefono(),
                c.getCorreo()
            });
        }

    }

    /**
     * el metodo actualizarTablaEmpleado se encarga de generar una actualizacion
     * a la tabla que muestra los datos de los empleados cuando surge alguna
     * modificacion para que estos datos se muestren de forma correcta
     */
    private void actualizarTablaEmpleado() {

        ArrayList<Empleado> empleados = empleadoDAO.obtenerEmpleados();

        DefaultTableModel model = (DefaultTableModel) this.jTable_empleadosAdmin.getModel();
        model.setRowCount(0); // Limpia todas las filas existentes        

        for (Empleado e : empleados) {
            model.addRow(new Object[]{
                e.getId(),
                e.getNombre(),
                e.getCorreo(),
                e.getRol().toString()
            });
        }
    }

    /**
     * el metodo actualizarTablaReservasCliente encarga de generar una
     * actualizacion a la tabla que muestra los datos de las reservas cuando
     * surge alguna modificacion para que estos datos se muestren de forma
     * correcta
     */
    private void actualizarTablaReservasCliente() {

        DefaultTableModel model = (DefaultTableModel) jTableReporteReservas.getModel();
        model.setRowCount(0); // Limpia todas las filas existentes        

        for (Reserva res : reservas) {
            String auxHoraInicio = "";
            String auxHoraFin = "";
            if (res.getTiempoOcupacion() != null) {
                auxHoraInicio = res.getTiempoOcupacion()
                        .format(DateTimeFormatter.ofPattern("HH:mm:ss"));
            }
            if (res.getTiempoFinalizacion() != null) {
                auxHoraFin = res.getTiempoFinalizacion()
                        .format(DateTimeFormatter.ofPattern("HH:mm:ss"));
            }
            model.addRow(new Object[]{
                res.getMesa().getNumero(),
                res.getFecha().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
                res.getHora().format(DateTimeFormatter.ofPattern("HH:mm:ss")),
                auxHoraInicio,
                auxHoraFin,
                res.getCliente().getNombre(),
                res.getMesa().getCapacidad()
            });
        }

    }


    private void jTabbedPane2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane2KeyPressed
    /**
     * Evento que se ejecuta cuando se aprieta el boton de eliminar en
     * bloqueo/eventos
     *
     * @param evt es evento de apretar el boton eliminar
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bme = bmes.get(jTable_bloqueoMesas.getSelectedRow());
        /**
         * Se envia un mensaje al usuario, de confirmacion si el bloqueo se
         * elimina correctamente o de error en caso contrario
         */
        if (empleadoDAO.eliminarBloqueoEvento(bme)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Bloqueo o evento eliminado con √©xito.", "√âxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            this.actualizarTablaBloqueoMesaEvento();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al eliminar bloqueo o evento", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Evento que se ejecuta cuando se aprieta el boton Se llama al metodo
     * actualizarTablaBloqueoMesaEvento
     *
     * @param evt es evento de apretar el boton actualizar
     */
    private void jButtonVerBloqueMesaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerBloqueMesaEventoActionPerformed
        actualizarTablaBloqueoMesaEvento();
    }//GEN-LAST:event_jButtonVerBloqueMesaEventoActionPerformed
    /**
     * Evento que se ejecuta cuando se aprieta el boton bloquear Se realiza el
     * bloqueo de la mesa si todo sale correctamente, de lo contrario si la
     * fecha ingresada no tiene el formato requerido, el horario de finalizacion
     * es mayor que el de inicio, se muestra un cartel de advertencia
     * solicitando corregir estos datos.
     *
     * @param evt es el evento de apretar el boton bloquear
     */
    private void jButton_bloqueoMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_bloqueoMesasActionPerformed
        BloqueoMesaEventoEspecial b = new BloqueoMesaEventoEspecial();
        String auxFecha = jTextField_fechaEvento.getText();

        LocalDate fechaBloqueoEvento;
        if (ClienteController.esFormatoFechaValido(auxFecha)) {
            try {
                fechaBloqueoEvento = LocalDate.parse(auxFecha, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            } catch (java.time.format.DateTimeParseException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese una fecha v√°lida", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese una fecha en formato dd/mm/aaaa", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        b.setFecha(fechaBloqueoEvento);

        String auxNumMesa = jComboBoxMesas.getSelectedItem().toString();

        String auxHoraInicio = jComboBoxHoraInicio.getSelectedItem().toString();
        String auxHoraFin = jComboBoxHoraFin.getSelectedItem().toString();

        int numeroMesa;
        LocalTime horaInicio;
        LocalTime horaFin;
        if (auxNumMesa.equals("Todas")) {
            if (Integer.parseInt(auxHoraInicio) > Integer.parseInt(auxHoraFin)) {
                javax.swing.JOptionPane.showMessageDialog(this, "La hora de inicio del evento debe ser menor a la hora de su finalizaci√≥n", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            numeroMesa = 0;
            horaInicio = LocalTime.parse(auxHoraInicio + ":00:00",
                    DateTimeFormatter.ofPattern("HH:mm:ss"));
            horaFin = LocalTime.parse(auxHoraFin + ":00:00",
                    DateTimeFormatter.ofPattern("HH:mm:ss"));

            b.setNumMesa(numeroMesa);
            b.setHoraInicio(horaInicio);
            b.setHoraFin(horaFin);

            if (empleadoDAO.bloquearMesaEventoEspecial(b)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Se a√±adi√≥ el evento.", "√âxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error al a√±adir el evento", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } else {
            numeroMesa = Integer.parseInt(auxNumMesa);
            b.setNumMesa(numeroMesa);
            if (empleadoDAO.bloquearMesaEventoEspecial(b)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Se a√±adi√≥ el bloqueo de mesa.", "√âxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error al a√±adir el bloqueo de mesa", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        }
        actualizarTablaBloqueoMesaEvento();
    }//GEN-LAST:event_jButton_bloqueoMesasActionPerformed

    private void jTextField_fechaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_fechaEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_fechaEventoActionPerformed

    private void jTxtFechaFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFechaFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtFechaFinalActionPerformed

    private void jTxtFechaInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFechaInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtFechaInicialActionPerformed
    /**
     * Es el evento que se produce al oprimir el boton ReservasFechas Se
     * verifica que la fecha ingresada sea del formato solicitado de lo
     * contrario se muestra una advertencia En el panel existen el filtro de
     * fecha inicial y final, se controla que la fecha final no sea menor a la
     * inicial Se muestran en la tabla todas las reservas realizadas dentro de
     * las fechas inicial y final
     *
     * @param evt es evento de apretar el boton ReservasFecha
     */
    private void jBReservasFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReservasFechaActionPerformed

        if (verificarCliente()) {
            String auxFechaI = jTxtFechaInicial.getText();
            String auxFechaF = jTxtFechaFinal.getText();
            if (!ClienteController.esFormatoFechaValido(auxFechaI)
                    | !ClienteController.esFormatoFechaValido(auxFechaF)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese fechas en formato dd/mm/aaaa", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                try {
                    fechaInicial = LocalDate.parse(auxFechaI, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                    fechaFinal = LocalDate.parse(auxFechaF, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                } catch (java.time.format.DateTimeParseException e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Ingrese fechas v√°lidas", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                }
                if (fechaInicial.isAfter(fechaFinal)) {
                    javax.swing.JOptionPane.showMessageDialog(this, "La fecha inicial no puede ser mayor a la fecha final", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                    return;
                } else {

                    reservas = reservaDAO.obtenerReservasHistorial(cliente);

                    for (int i = 0; i < reservas.size(); i++) {
                        Reserva res = reservas.get(i);
                        if (res.getFecha().isBefore(fechaInicial)
                                || res.getFecha().isAfter(fechaFinal)) {
                            reservas.remove(res);
                            i--;
                        }
                    }
                    actualizarTablaReservasCliente();

                }
            }
        }


    }//GEN-LAST:event_jBReservasFechaActionPerformed
    /**
     * Es el evento que se produce al oprimir el boton Todas las Reservas. Como
     * resultado muestra en la tabla todas las reservas realizadas
     *
     * @param evt evento de presionar el boton Todas las Reservas
     *
     */
    private void jBTodasLasReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTodasLasReservasActionPerformed

        if (verificarCliente()) {
            reservas = reservaDAO.obtenerReservasHistorial(cliente);
            actualizarTablaReservasCliente();
        }
    }//GEN-LAST:event_jBTodasLasReservasActionPerformed
    /**
     * el metodo verificarCliente se encarga de controlar si el cliente buscado
     * se encuentra dentro de nuestro registro
     *
     * @return true si el cliente se encuentra registrado, false si el cliente
     * no esta
     */
    private boolean verificarCliente() {
        if (jTxtCorreo.getText().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Ingrese un cliente", "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }

        cliente = clienteDAO.obtenerCliente(jTxtCorreo.getText());

        if (!cliente.getCorreo().equals(jTxtCorreo.getText())) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "No existe un cliente con el correo ingresado", "Advertencia",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    /**
     * Es el evento que se produce al oprimir el boton Reservas futuras. Como
     * resultado muestra en la tabla todas las reservas que se realizaron para
     * fechas futuras a la actual
     *
     * @param evt evento de presionar el boton Reservas Futuras
     */
    private void jBReservasFuturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReservasFuturasActionPerformed
        if (verificarCliente()) {
            reservas = reservaDAO.obtenerReservasHistorial(cliente);

            for (int i = 0; i < reservas.size(); i++) {
                Reserva res = reservas.get(i);
                if (LocalDateTime.of(res.getFecha(), res.getHora())
                        .isBefore(LocalDateTime.now())) {
                    reservas.remove(res);
                    i--;
                }
            }

            actualizarTablaReservasCliente();
        }
    }//GEN-LAST:event_jBReservasFuturasActionPerformed
    /**
     * Se llama al metodo de actualizarTablaEmpleado al presionar el boton ver
     *
     * @param evt es el evento de presionar el boton ver
     */
    private void jButtonVerEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerEmpleadosActionPerformed
        actualizarTablaEmpleado();
    }//GEN-LAST:event_jButtonVerEmpleadosActionPerformed

    private void jTextField_administrador_empleado_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_administrador_empleado_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_administrador_empleado_nombreActionPerformed

    private void jComboBox_administrador_empleado_rolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_administrador_empleado_rolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_administrador_empleado_rolActionPerformed
    /**
     * es el evento que se produce al apretar el boton agregar. Aqui se verifica
     * que los datos ingresados para la creacion del nuevo usuario sean validos.
     * Si existe un error en alguno de ellos se mostraran distintas advertencias
     * por pantalla. Si el nuevo usuario es agregado correctamente se muestra
     * por pantalla una confirmacion.
     *
     * @param evt es el evento de presionar el boton agregar
     */
    private void jButton_administrador_empleado_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_administrador_empleado_agregarActionPerformed
        String nombre = this.jTextField_administrador_empleado_nombre.getText();
        String correo = this.jTextField_administrador_empleado_correo.getText();
        String contrasenia = String.valueOf(this.jTextField_administrador_empleado_contrasenia.getPassword());
        Rol rol = null;
        switch (this.jComboBox_administrador_empleado_rol.getSelectedItem().toString()) {
            case "Administrador":
                rol = Rol.Administrador;
                break;
            case "Mesero":
                rol = Rol.Mesero;
                break;
            case "Recepcionista":
                rol = Rol.Recepcionista;
                break;
            case "Cocinero":
                rol = Rol.Cocinero;
                break;
            default:
                break;
        }
        if (nombre.equals("")
                || correo.equals("")
                || contrasenia.equals("")) {
            javax.swing.JOptionPane.showMessageDialog(null, "Debe completar todos los campos");
        } else {
            if (ClienteController.esCorreoElectronicoValido(correo)) {
                Empleado emp = new Empleado();
                emp.setNombre(nombre);
                emp.setCorreo(correo);
                emp.setContrasenia(contrasenia);
                emp.setRol(rol);
                System.out.println(emp);
                if (empleadoDAO.registrarEmpleado(emp)) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Registrado exitosamente");
                    actualizarTablaEmpleado();
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Ingrese un correo electronico valido");
            }

        }
    }//GEN-LAST:event_jButton_administrador_empleado_agregarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btn_administrador_mesa_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_administrador_mesa_eliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_administrador_mesa_eliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArrayList<Cliente> clientes = clienteDAO.obtenerClientes();

        actualizarTablaCliente(clientes);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton_administrador_reservas_verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_administrador_reservas_verActionPerformed

    }//GEN-LAST:event_jButton_administrador_reservas_verActionPerformed

    private void jTextFieldVeranoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldVeranoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldVeranoActionPerformed
/**
 * Nose que es Jbutton7
 * @param evt 
 */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        ArrayList<Cliente> clientes = clienteDAO.obtenerClientes();
        int maxAsistencias = 0;
        for (int i = 0; i < clientes.size(); i++) {
            Cliente auxCliente = clientes.get(i);
            int auxAsistencia = reservaDAO.cantidadAsistencias(auxCliente);
            if (auxAsistencia < maxAsistencias) {
                clientes.remove(i);
                i--;
            } else if (auxAsistencia > maxAsistencias) {
                maxAsistencias = auxAsistencia;
                i = -1;
            }
        }
        actualizarTablaCliente(clientes);
    }//GEN-LAST:event_jButton7ActionPerformed
/**
 * Nose que es Jbutton3
 * @param evt 
 */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ArrayList<Cliente> clientes = clienteDAO.obtenerClientes();
        for (Cliente cliente : clientes) {
            cliente.setReservas(reservaDAO.obtenerReservasHistorial(cliente));
        }

        int conti = 0;
        for (int i = 0; i < clientes.size(); i++) {
            System.out.println(conti++);

            Cliente auxCliente = clientes.get(i);
            ArrayList<Reserva> auxReservas = auxCliente.getReservas();
            if (auxReservas.isEmpty()) {
                clientes.remove(i);
                i--;
            } else {
                boolean inasistenciaEnA√±o = false;
                for (Reserva res : auxReservas) {
                    LocalDateTime auxF = LocalDateTime.of(res.getFecha(), res.getHora());
                    System.out.println(auxF);
                    System.out.println(res.getCliente().getNombre());
                    System.out.println("" + res.getAsistencia());
                    if (auxF.isAfter(LocalDateTime.now().minusYears(1))
                            && auxF.isBefore(LocalDateTime.now())) {
                        if (!res.getAsistencia()) {
                            inasistenciaEnA√±o = true;
                            break;
                        }
                    }
                }
                if (!inasistenciaEnA√±o) {
                    clientes.remove(i);
                    i--;
                }
            }

        }
        actualizarTablaCliente(clientes);
    }//GEN-LAST:event_jButton3ActionPerformed
/**
 * nose que es Jbutton8
 * @param evt 
 */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        reservas = reservaDAO.obtenerReservas();

        MonthDay verano = MonthDay.of(12, 20);
        MonthDay primavera = MonthDay.of(11, 20);
        MonthDay invierno = MonthDay.of(6, 20);
        MonthDay oto√±o = MonthDay.of(3, 20);

        int cantVerano = 0;
        int cantPrimavera = 0;
        int cantInvierno = 0;
        int cantOto√±o = 0;
        for (Reserva res : reservas) {
            LocalDate aux = res.getFecha();
            MonthDay MesDiaR = MonthDay.of(aux.getMonth(),
                    aux.getDayOfMonth());
            if (MesDiaR.isAfter(verano)) {
                cantVerano++;
            } else if (MesDiaR.isAfter(primavera)) {
                cantPrimavera++;
            } else if (MesDiaR.isAfter(invierno)) {
                cantInvierno++;
            } else if (MesDiaR.isAfter(oto√±o)) {
                cantOto√±o++;
            } else {
                cantVerano++;
            }
        }

        this.jTextFieldVerano.setText(String.valueOf(cantVerano));
        this.jTextFieldOto√±o.setText(String.valueOf(cantOto√±o));
        this.jTextFieldInvierno.setText(String.valueOf(cantInvierno));
        this.jTextFieldPrimavera.setText(String.valueOf(cantPrimavera));


    }//GEN-LAST:event_jButton8ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_administrador_mesa_eliminar;
    public javax.swing.JButton btn_administrador_mesa_modificar;
    private javax.swing.JButton jBReservasFecha;
    private javax.swing.JButton jBReservasFuturas;
    private javax.swing.JButton jBTodasLasReservas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonVerBloqueMesaEvento;
    private javax.swing.JButton jButtonVerEmpleados;
    public javax.swing.JButton jButton_Administrador_salir;
    public javax.swing.JButton jButton_administrador_empleado_agregar;
    public javax.swing.JButton jButton_administrador_reservas_ver;
    private javax.swing.JButton jButton_bloqueoMesas;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBoxHoraFin;
    private javax.swing.JComboBox<String> jComboBoxHoraInicio;
    private javax.swing.JComboBox<String> jComboBoxMesas;
    public javax.swing.JComboBox<String> jComboBox_administrador_empleado_rol;
    public javax.swing.JComboBox<String> jComboBox_administrador_mesas_ubi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_eventosEspeciales;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    public javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableReporteReservas;
    public javax.swing.JTable jTable_bloqueoMesas;
    public javax.swing.JTable jTable_clientesAdmin;
    public javax.swing.JTable jTable_empleadosAdmin;
    public javax.swing.JTable jTable_mesasAdmin;
    private javax.swing.JTextField jTextFieldInvierno;
    private javax.swing.JTextField jTextFieldOto√±o;
    private javax.swing.JTextField jTextFieldPrimavera;
    private javax.swing.JTextField jTextFieldVerano;
    private javax.swing.JPasswordField jTextField_administrador_empleado_contrasenia;
    public javax.swing.JTextField jTextField_administrador_empleado_correo;
    public javax.swing.JTextField jTextField_administrador_empleado_nombre;
    public javax.swing.JTextField jTextField_administrador_mesa_cliente;
    public javax.swing.JTextField jTextField_administrador_reserva_cliente;
    public javax.swing.JTextField jTextField_administrador_reserva_fecha;
    public javax.swing.JTextField jTextField_administrador_reserva_id;
    public javax.swing.JTextField jTextField_fechaEvento;
    private javax.swing.JTextField jTxtCorreo;
    private javax.swing.JTextField jTxtFechaFinal;
    private javax.swing.JTextField jTxtFechaInicial;
    public javax.swing.JTable tabla_reservasAdmin;
    // End of variables declaration//GEN-END:variables

}
